// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: api/v1/consumer.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConsumerGroupState int32

const (
	ConsumerGroupState_CONSUMER_GROUP_STATE_UNSPECIFIED          ConsumerGroupState = 0
	ConsumerGroupState_CONSUMER_GROUP_STATE_PREPARING_REBALANCE  ConsumerGroupState = 1
	ConsumerGroupState_CONSUMER_GROUP_STATE_COMPLETING_REBALANCE ConsumerGroupState = 2
	ConsumerGroupState_CONSUMER_GROUP_STATE_STABLE               ConsumerGroupState = 3
	ConsumerGroupState_CONSUMER_GROUP_STATE_DEAD                 ConsumerGroupState = 4
	ConsumerGroupState_CONSUMER_GROUP_STATE_EMPTY                ConsumerGroupState = 5
)

// Enum value maps for ConsumerGroupState.
var (
	ConsumerGroupState_name = map[int32]string{
		0: "CONSUMER_GROUP_STATE_UNSPECIFIED",
		1: "CONSUMER_GROUP_STATE_PREPARING_REBALANCE",
		2: "CONSUMER_GROUP_STATE_COMPLETING_REBALANCE",
		3: "CONSUMER_GROUP_STATE_STABLE",
		4: "CONSUMER_GROUP_STATE_DEAD",
		5: "CONSUMER_GROUP_STATE_EMPTY",
	}
	ConsumerGroupState_value = map[string]int32{
		"CONSUMER_GROUP_STATE_UNSPECIFIED":          0,
		"CONSUMER_GROUP_STATE_PREPARING_REBALANCE":  1,
		"CONSUMER_GROUP_STATE_COMPLETING_REBALANCE": 2,
		"CONSUMER_GROUP_STATE_STABLE":               3,
		"CONSUMER_GROUP_STATE_DEAD":                 4,
		"CONSUMER_GROUP_STATE_EMPTY":                5,
	}
)

func (x ConsumerGroupState) Enum() *ConsumerGroupState {
	p := new(ConsumerGroupState)
	*p = x
	return p
}

func (x ConsumerGroupState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsumerGroupState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_consumer_proto_enumTypes[0].Descriptor()
}

func (ConsumerGroupState) Type() protoreflect.EnumType {
	return &file_api_v1_consumer_proto_enumTypes[0]
}

func (x ConsumerGroupState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsumerGroupState.Descriptor instead.
func (ConsumerGroupState) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_consumer_proto_rawDescGZIP(), []int{0}
}

// ConsumerGroupDescriptor
type ConsumerGroupDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topics             []string `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	ActiveGenerationId uint64   `protobuf:"varint,3,opt,name=active_generation_id,json=activeGenerationId,proto3" json:"active_generation_id,omitempty"`
	// client.id -> node
	RegisteredClients map[string]*ConsumerGroupNode `protobuf:"bytes,4,rep,name=registered_clients,json=registeredClients,proto3" json:"registered_clients,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConsumerGroupDescriptor) Reset() {
	*x = ConsumerGroupDescriptor{}
	mi := &file_api_v1_consumer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroupDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroupDescriptor) ProtoMessage() {}

func (x *ConsumerGroupDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_consumer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroupDescriptor.ProtoReflect.Descriptor instead.
func (*ConsumerGroupDescriptor) Descriptor() ([]byte, []int) {
	return file_api_v1_consumer_proto_rawDescGZIP(), []int{0}
}

func (x *ConsumerGroupDescriptor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConsumerGroupDescriptor) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ConsumerGroupDescriptor) GetActiveGenerationId() uint64 {
	if x != nil {
		return x.ActiveGenerationId
	}
	return 0
}

func (x *ConsumerGroupDescriptor) GetRegisteredClients() map[string]*ConsumerGroupNode {
	if x != nil {
		return x.RegisteredClients
	}
	return nil
}

type TopicPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic          string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	PartitionIndex uint32 `protobuf:"varint,2,opt,name=partition_index,json=partitionIndex,proto3" json:"partition_index,omitempty"`
}

func (x *TopicPartition) Reset() {
	*x = TopicPartition{}
	mi := &file_api_v1_consumer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicPartition) ProtoMessage() {}

func (x *TopicPartition) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_consumer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicPartition.ProtoReflect.Descriptor instead.
func (*TopicPartition) Descriptor() ([]byte, []int) {
	return file_api_v1_consumer_proto_rawDescGZIP(), []int{1}
}

func (x *TopicPartition) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TopicPartition) GetPartitionIndex() uint32 {
	if x != nil {
		return x.PartitionIndex
	}
	return 0
}

// ConsumerGroupNode
type ConsumerGroupNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerGroupId    string             `protobuf:"bytes,1,opt,name=consumer_group_id,json=consumerGroupId,proto3" json:"consumer_group_id,omitempty"`
	AssignedPartitions []*TopicPartition  `protobuf:"bytes,2,rep,name=assigned_partitions,json=assignedPartitions,proto3" json:"assigned_partitions,omitempty"`
	ActiveGenerationId uint64             `protobuf:"varint,3,opt,name=active_generation_id,json=activeGenerationId,proto3" json:"active_generation_id,omitempty"`
	State              ConsumerGroupState `protobuf:"varint,4,opt,name=state,proto3,enum=api.v1.ConsumerGroupState" json:"state,omitempty"`
	// equivalent to kafka's client.id
	// that uniquely identifies the node in a consumer group
	ClientId        string            `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CommittedOffset map[uint32]uint64 `protobuf:"bytes,6,rep,name=committed_offset,json=committedOffset,proto3" json:"committed_offset,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CurrentOffset   map[uint32]uint64 `protobuf:"bytes,7,rep,name=current_offset,json=currentOffset,proto3" json:"current_offset,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ConsumerGroupNode) Reset() {
	*x = ConsumerGroupNode{}
	mi := &file_api_v1_consumer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroupNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroupNode) ProtoMessage() {}

func (x *ConsumerGroupNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_consumer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroupNode.ProtoReflect.Descriptor instead.
func (*ConsumerGroupNode) Descriptor() ([]byte, []int) {
	return file_api_v1_consumer_proto_rawDescGZIP(), []int{2}
}

func (x *ConsumerGroupNode) GetConsumerGroupId() string {
	if x != nil {
		return x.ConsumerGroupId
	}
	return ""
}

func (x *ConsumerGroupNode) GetAssignedPartitions() []*TopicPartition {
	if x != nil {
		return x.AssignedPartitions
	}
	return nil
}

func (x *ConsumerGroupNode) GetActiveGenerationId() uint64 {
	if x != nil {
		return x.ActiveGenerationId
	}
	return 0
}

func (x *ConsumerGroupNode) GetState() ConsumerGroupState {
	if x != nil {
		return x.State
	}
	return ConsumerGroupState_CONSUMER_GROUP_STATE_UNSPECIFIED
}

func (x *ConsumerGroupNode) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ConsumerGroupNode) GetCommittedOffset() map[uint32]uint64 {
	if x != nil {
		return x.CommittedOffset
	}
	return nil
}

func (x *ConsumerGroupNode) GetCurrentOffset() map[uint32]uint64 {
	if x != nil {
		return x.CurrentOffset
	}
	return nil
}

var File_api_v1_consumer_proto protoreflect.FileDescriptor

var file_api_v1_consumer_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22,
	0xbb, 0x02, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x65, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5f, 0x0a, 0x16,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a,
	0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xbf,
	0x04, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x47, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x42, 0x0a, 0x14, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40,
	0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x2a, 0xf7, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x4e, 0x53, 0x55,
	0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2c, 0x0a,
	0x28, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x52, 0x45, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x43,
	0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x52,
	0x45, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f,
	0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43,
	0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f,
	0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x05, 0x42, 0x7f, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x72, 0x65, 0x66, 0x73, 0x2f, 0x63, 0x61, 0x72,
	0x6e, 0x61, 0x78, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x70, 0x69,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v1_consumer_proto_rawDescOnce sync.Once
	file_api_v1_consumer_proto_rawDescData = file_api_v1_consumer_proto_rawDesc
)

func file_api_v1_consumer_proto_rawDescGZIP() []byte {
	file_api_v1_consumer_proto_rawDescOnce.Do(func() {
		file_api_v1_consumer_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_consumer_proto_rawDescData)
	})
	return file_api_v1_consumer_proto_rawDescData
}

var file_api_v1_consumer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_consumer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_v1_consumer_proto_goTypes = []any{
	(ConsumerGroupState)(0),         // 0: api.v1.ConsumerGroupState
	(*ConsumerGroupDescriptor)(nil), // 1: api.v1.ConsumerGroupDescriptor
	(*TopicPartition)(nil),          // 2: api.v1.TopicPartition
	(*ConsumerGroupNode)(nil),       // 3: api.v1.ConsumerGroupNode
	nil,                             // 4: api.v1.ConsumerGroupDescriptor.RegisteredClientsEntry
	nil,                             // 5: api.v1.ConsumerGroupNode.CommittedOffsetEntry
	nil,                             // 6: api.v1.ConsumerGroupNode.CurrentOffsetEntry
}
var file_api_v1_consumer_proto_depIdxs = []int32{
	4, // 0: api.v1.ConsumerGroupDescriptor.registered_clients:type_name -> api.v1.ConsumerGroupDescriptor.RegisteredClientsEntry
	2, // 1: api.v1.ConsumerGroupNode.assigned_partitions:type_name -> api.v1.TopicPartition
	0, // 2: api.v1.ConsumerGroupNode.state:type_name -> api.v1.ConsumerGroupState
	5, // 3: api.v1.ConsumerGroupNode.committed_offset:type_name -> api.v1.ConsumerGroupNode.CommittedOffsetEntry
	6, // 4: api.v1.ConsumerGroupNode.current_offset:type_name -> api.v1.ConsumerGroupNode.CurrentOffsetEntry
	3, // 5: api.v1.ConsumerGroupDescriptor.RegisteredClientsEntry.value:type_name -> api.v1.ConsumerGroupNode
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_v1_consumer_proto_init() }
func file_api_v1_consumer_proto_init() {
	if File_api_v1_consumer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_consumer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_consumer_proto_goTypes,
		DependencyIndexes: file_api_v1_consumer_proto_depIdxs,
		EnumInfos:         file_api_v1_consumer_proto_enumTypes,
		MessageInfos:      file_api_v1_consumer_proto_msgTypes,
	}.Build()
	File_api_v1_consumer_proto = out.File
	file_api_v1_consumer_proto_rawDesc = nil
	file_api_v1_consumer_proto_goTypes = nil
	file_api_v1_consumer_proto_depIdxs = nil
}
